---
title: "Pemodelan_Klasifikasi"
author: "Rachmat Bintang Yudhianto"
date: "2024-11-04"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(lares)
library(tidyverse)
library(tidymodels)
library(themis)
library(tidyposterior)
library(SmartEDA)
library(DataExplorer)
library(skimr)
library(ggpubr)
library(workflowsets)
library(nnet)
```


```{r}
data_kur <- read.csv("data_fix_new.csv")
head(data_kur)
```

```{r}
data_summary_class <- data_kur %>% 
  group_by(Penerima_KUR) %>%
  summarise(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)
ggplot(data_summary_class, aes(x = "", y = count, fill = as.factor(Penerima_KUR))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  geom_text(aes(label = paste0(count, " (", round(percentage, 1), "%)")),
            position = position_stack(vjust = 0.5),
            color = "black") +  
  labs(title = "Distribusi Penerima KUR Di 5 Kabupaten/Kota Provinsi Jawa Barat",
       fill = "Status Penerima KUR") +
  scale_fill_manual(values = c("1" = "green", "5" = "red"), 
                    labels = c("Ya", "Tidak")) +
  theme_minimal() +
  theme(
    axis.text.x = element_blank(),   
    axis.title.x = element_blank(),  
    axis.title.y = element_blank(),  
    axis.text.y = element_blank()    
  )
```

```{r}
data_processed <- data_kur %>% 
  select(
    Penerima_KUR,
    Kode_Kabupaten,
    Klasifikasi_Perkotaan_Perdesaan,
    Status_Kepemilikan_Rumah,
    Memiliki_Rumah_Lain,
    Bahan_Atap,
    Bahan_Dinding,
    Bahan_Lantai,
    Memiliki_Fasilitas_BAB,
    Menerima_Kredit_Lain,
    Memiliki_Gas_Min5kg,
    Memiliki_Kulkas,
    Memiliki_AC,
    Memiliki_Motor,
    Memiliki_Mobil,
    Memiliki_Lahan,
    Pengeluaran_Per_Kapita,
    Luas_Lantai_Bangunan,
    Jumlah_ART
  ) %>% 
  mutate(
    across(
      c(
        Penerima_KUR,
        Kode_Kabupaten,
        Klasifikasi_Perkotaan_Perdesaan,
        Status_Kepemilikan_Rumah,
        Memiliki_Rumah_Lain,
        Bahan_Atap,
        Bahan_Dinding,
        Bahan_Lantai,
        Memiliki_Fasilitas_BAB,
        Menerima_Kredit_Lain,
        Memiliki_Gas_Min5kg,
        Memiliki_Kulkas,
        Memiliki_AC,
        Memiliki_Motor,
        Memiliki_Mobil,
        Memiliki_Lahan
      ), 
      as.factor
    ),
    Pengeluaran_Per_Kapita = as.numeric(Pengeluaran_Per_Kapita),
    Luas_Lantai_Bangunan = as.numeric(Luas_Lantai_Bangunan),
    Jumlah_ART = as.numeric(Jumlah_ART)
  )

head(data_processed)
```

```{r}
plot_intro(data = data_processed,
           ggtheme = theme_classic(),
           theme_config = list(axis.line=element_blank(),
                               axis.ticks=element_blank(),
                               axis.text.x=element_blank(),
                               axis.title=element_blank()
                               )  
           )
```

```{r}
# Jika belum terpasang
# install.packages("ggcorrplot")

library(ggcorrplot)

# Membuat matriks korelasi hanya dari kolom numerik
numeric_data <- data_kur[, sapply(data_kur, is.numeric)]
cor_matrix <- cor(numeric_data)

# Plot korelasi dengan pengaturan tambahan untuk meningkatkan keterbacaan
# Plot korelasi dengan pengaturan tambahan
ggcorrplot(cor_matrix, 
           lab = TRUE,           # Menambahkan nilai korelasi
           lab_size = 2.9,         # Ukuran label lebih kecil
           method = "square",    # Tipe plot
           colors = c("blue", "white", "red"), # Skala warna
           outline.color = "gray",
           type = "upper",       # Menampilkan setengah matriks
           title = "Correlation Matrix",
           ggtheme = theme_minimal()) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 8),  # Rotasi label sumbu x lebih tajam
        axis.text.y = element_text(size = 8),   # Ukuran teks sumbu y
        plot.title = element_text(size = 14, face = "bold"))  # Judul plot
```

```{r}
sum(is.na(data_processed))
```

```{r}
data_processed %>% 
  plot_histogram(
             ggtheme = theme_lares(),
             geom_histogram_args = list(bins=30,
                                        col="black",
                                        fill="#107896"),
             ncol = 1,nrow = 1)
```


```{r}
summary(data_processed$Pengeluaran_Per_Kapita)
```

```{r}
data_processed %>% 
  ExpCatViz(clim = 10,
            col = "#107896",
            Page = NULL,
            Flip = TRUE)
```

```{r}
data_kur %>% 
  plot_bar(by = "Penerima_KUR",
           ggtheme = theme_lares(),
           nrow = 2,ncol = 1
           )
```

```{r}
data_processed %>% 
  ExpNumViz(target = "Penerima_KUR",
            type = 2)
```

```{r}
pengeluaran_per_kapita_kur <- data_processed %>%
  group_by(Kode_Kabupaten) %>%
  summarise(total_kapita = sum(Pengeluaran_Per_Kapita, na.rm = TRUE)) %>%
  arrange(desc(total_kapita)) %>%
  top_n(10, total_kapita)

# Visualisasikan
ggplot(pengeluaran_per_kapita_kur, aes(x = reorder(Kode_Kabupaten, total_kapita), y = total_kapita)) +
  geom_bar(stat = "identity", fill = "darkgreen") +
  labs(title = "Sebaran Pengeluaran per Kapita di 5 Kabupaten",
       x = "Kabupaten", y = "Total Keluaran Kapitan") +
  coord_flip() +
  theme_minimal()
```


```{r}
set.seed(1014)
rec_ohe <- recipe(Penerima_KUR ~ ., data = data_processed) %>%
 step_dummy(all_nominal_predictors(), -all_of(c("Pengeluaran_Per_Kapita", "Luas_Lantai_Bangunan", "Jumlah_ART")))  
data_processed <- prep(rec_ohe) %>% juice()
```

```{r}
library(caret)

set.seed(14)
split_index <- createDataPartition(data_processed$Penerima_KUR, p = 0.6, list = FALSE)
data_train <- data_processed[split_index, ]
data_test <- data_processed[-split_index, ]
```


```{r}
f_data_asli <- as.vector(table(data_processed$Penerima_KUR))
f_data_latih <- as.vector(table(data_train$Penerima_KUR))
f_data_uji <- as.vector(table(data_test$Penerima_KUR))
nama_data <- c("Data Asli", "Data Latih", "Data Uji")
partisi_data <- data.frame(nama_data, rbind(f_data_asli, f_data_latih, f_data_uji))
rownames(partisi_data) <- NULL
colnames(partisi_data) <- c("Data", "1", "5")
partisi_data
```

```{r}
write.csv(data_train, "data_train.csv", row.names=FALSE)
write.csv(data_test, "data_test.csv", row.names=FALSE)
```

```{r}
head(data_train)
```


